from flask import Flask, render_template, request, redirect, url_for
from pymongo import MongoClient
import certifi
import os

# Load MongoDB URI from environment variable or use default
MONGO_URI = os.getenv(
    "MONGO_URI",
    "mongodb+srv://sahalusr1:securepass@cluster0.bdnyrmo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
)

# Initialize Flask app
app = Flask(__name__)

# Initialize MongoDB client and collection
client = MongoClient(MONGO_URI, tlsCAFile=certifi.where())
db = client["todo_database"]
collection = db["todos"]

# Route to display the todo list
@app.route("/")
def index():
    tasks = list(collection.find())
    return render_template("to_do.html", tasks=tasks)

# Route to handle form submission
@app.route("/submittodoitem", methods=["POST"])
def submit_todo_item():
    # Collect all fields from form
    itemID = request.form.get("itemID")
    itemUUID = request.form.get("itemUUID")
    itemHash = request.form.get("itemHash")
    itemName = request.form.get("itemName")
    itemDescription = request.form.get("itemDescription")

    if itemID and itemUUID and itemHash and itemName and itemDescription:
        # Insert into MongoDB
        collection.insert_one({
            "itemID": itemID,
            "itemUUID": itemUUID,
            "itemHash": itemHash,
            "name": itemName,
            "description": itemDescription
        })

    # Redirect back to the todo list page
    return redirect(url_for("index"))

# Run the Flask app
if __name__ == "__main__":
    app.run(debug=True)
